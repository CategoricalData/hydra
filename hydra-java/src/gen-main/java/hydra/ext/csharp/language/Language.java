// Note: this is an automatically generated file. Do not edit.

package hydra.ext.csharp.language;

/**
 * Language constraints and reserved words for C Sharp (C#)
 */
public interface Language {
  static hydra.coders.Language csharpLanguage() {
    return new hydra.coders.Language(new hydra.coders.LanguageName("hydra.ext.csharp"), new hydra.coders.LanguageConstraints(hydra.lib.sets.FromList.apply(java.util.Arrays.asList(
      new hydra.mantle.EliminationVariant.List(),
      new hydra.mantle.EliminationVariant.Optional(),
      new hydra.mantle.EliminationVariant.Product(),
      new hydra.mantle.EliminationVariant.Record(),
      new hydra.mantle.EliminationVariant.Union(),
      new hydra.mantle.EliminationVariant.Wrap())), hydra.lib.sets.FromList.apply(java.util.Arrays.asList(
      new hydra.mantle.LiteralVariant.Binary(),
      new hydra.mantle.LiteralVariant.Boolean_(),
      new hydra.mantle.LiteralVariant.Float_(),
      new hydra.mantle.LiteralVariant.Integer_(),
      new hydra.mantle.LiteralVariant.String_())), hydra.lib.sets.FromList.apply(java.util.Arrays.asList(
      new hydra.core.FloatType.Float32(),
      new hydra.core.FloatType.Float64())), hydra.lib.sets.FromList.apply(java.util.Arrays.asList(
      new hydra.mantle.FunctionVariant.Elimination(),
      new hydra.mantle.FunctionVariant.Lambda(),
      new hydra.mantle.FunctionVariant.Primitive())), hydra.lib.sets.FromList.apply(java.util.Arrays.asList(
      new hydra.core.IntegerType.Int8(),
      new hydra.core.IntegerType.Int16(),
      new hydra.core.IntegerType.Int32(),
      new hydra.core.IntegerType.Int64(),
      new hydra.core.IntegerType.Uint8(),
      new hydra.core.IntegerType.Uint16(),
      new hydra.core.IntegerType.Uint32(),
      new hydra.core.IntegerType.Uint64())), hydra.lib.sets.FromList.apply(java.util.Arrays.asList(
      new hydra.mantle.TermVariant.Application(),
      new hydra.mantle.TermVariant.Function(),
      new hydra.mantle.TermVariant.Let(),
      new hydra.mantle.TermVariant.List(),
      new hydra.mantle.TermVariant.Literal(),
      new hydra.mantle.TermVariant.Map(),
      new hydra.mantle.TermVariant.Optional(),
      new hydra.mantle.TermVariant.Product(),
      new hydra.mantle.TermVariant.Record(),
      new hydra.mantle.TermVariant.Set(),
      new hydra.mantle.TermVariant.Union(),
      new hydra.mantle.TermVariant.Variable(),
      new hydra.mantle.TermVariant.Wrap())), hydra.lib.sets.FromList.apply(java.util.Arrays.asList(
      new hydra.mantle.TypeVariant.Annotated(),
      new hydra.mantle.TypeVariant.Application(),
      new hydra.mantle.TypeVariant.Function(),
      new hydra.mantle.TypeVariant.Lambda(),
      new hydra.mantle.TypeVariant.List(),
      new hydra.mantle.TypeVariant.Literal(),
      new hydra.mantle.TypeVariant.Map(),
      new hydra.mantle.TypeVariant.Optional(),
      new hydra.mantle.TypeVariant.Product(),
      new hydra.mantle.TypeVariant.Record(),
      new hydra.mantle.TypeVariant.Set(),
      new hydra.mantle.TypeVariant.Union(),
      new hydra.mantle.TypeVariant.Variable(),
      new hydra.mantle.TypeVariant.Wrap())), (java.util.function.Function<hydra.core.Type, Boolean>) (ignored -> true)));
  }
  
  static java.util.Set<String> csharpReservedWords() {
    java.util.List<String> keywords = java.util.Arrays.asList(
      "DEFAULT",
      "FALSE",
      "NULL",
      "TRUE",
      "abstract",
      "as",
      "base",
      "bool",
      "break",
      "byte",
      "case",
      "catch",
      "char",
      "checked",
      "class",
      "const",
      "continue",
      "decimal",
      "delegate",
      "do",
      "double",
      "else",
      "enum",
      "event",
      "explicit",
      "extern",
      "finally",
      "fixed",
      "float",
      "for",
      "foreach",
      "goto",
      "if",
      "implicit",
      "in",
      "int",
      "interface",
      "internal",
      "is",
      "lock",
      "long",
      "namespace",
      "new",
      "object",
      "operator",
      "out",
      "override",
      "params",
      "private",
      "protected",
      "public",
      "readonly",
      "ref",
      "return",
      "sbyte",
      "sealed",
      "short",
      "sizeof",
      "stackalloc",
      "static",
      "string",
      "struct",
      "switch",
      "this",
      "throw",
      "try",
      "typeof",
      "uint",
      "ulong",
      "unchecked",
      "unsafe",
      "ushort",
      "using",
      "virtual",
      "void",
      "volatile",
      "while");
    java.util.List<String> contextualKeywords = java.util.Arrays.asList(
      "add",
      "alias",
      "ascending",
      "async",
      "await",
      "by",
      "descending",
      "dynamic",
      "equals",
      "from",
      "get",
      "global",
      "group",
      "into",
      "join",
      "let",
      "nameof",
      "on",
      "orderby",
      "partial",
      "remove",
      "select",
      "set",
      "unmanaged",
      "value",
      "var",
      "when",
      "where",
      "yield");
    return hydra.lib.sets.FromList.apply(hydra.lib.lists.Concat.apply(java.util.Arrays.asList(
      (keywords),
      (contextualKeywords))));
  }
}